
		function initChat(){
			log('init chat');
			
			// Check if Username isn't blank and available
			if(username != ''){
			
				// Setup once only processed items
				loggedIn = true;
				pingRequest = JSON.stringify({'type':'ping','username': username});
				
				// Setup chat box
				$('#nodeChat_login').fadeOut(500,function(){
					//nodeChat();
					$('#nodeChat_username').fadeIn(500);
					$('#nodeChat_chatbox').fadeIn(500);
					$('#nodeChat_input').fadeIn(500);
				});
			}
		}

		function nodeChat(){
			initColorPicker();
			ws.send(JSON.stringify({'type':'USER_LOG_REQUEST','username': username}));
			ws.send(JSON.stringify({'type':'USER_LOGIN','username': username}));
			//Get Chat Login
			keepalive = setInterval(function(){
				ws.send(pingRequest);
			},5000);
		
			//User Messaging
			$('#nodeChat_input form').submit(function(event){
				
				if(loggedIn && validateMessage($('#m').val()) === true){
					var obj = {
						'type': 'USER_PUBLIC_MESSAGE',
						'username': username,
						'message': $('#m').val()
					};
				
					log(ws);		
					ws.send(JSON.stringify(obj));
					$('#m').val('');
					event.preventDefault();
					return false;
				}else{
					event.preventDefault();
				}				
			});
			
			ws.onmessage = function(event){
				log('Message event has arrived');		
				edata = JSON.parse(event.data);
				
				labelClass = 'btn btn-danger';
				if(edata.username != 'System'){
					labelClass = 'btn';
				}
				
				switch(edata.type){
					case 'LOG_MESSAGE':
						appendToChat('<span  class="' + labelClass + '" style="color:rgb(' + edata.color + ');" >' + edata.username + '</span> ' + edata.message, autoScroll);
						break;
					case 'CHAT_MESSAGE':
						console.log('color: '+edata.color);
						appendToChat('<span  class="' + labelClass + '" style="color:rgb(' + edata.color + ');" >' + edata.username + '</span> ' + edata.message, autoScroll);
						break;
					case 'SYSTEM_MESSAGE':
						appendToChat('<span  class="' + labelClass + '">System</span> ' + edata.message, autoScroll);
						break;
					case 'UPDATE_USERLIST':
						console.log('user list data: ' + edata);
						updateUserlist(edata.userlist);
						break;
					case 'SYSTEM_LOGIN_UPDATE_USERNAME':
						$('#nodeChat_username div p span').html(edata.username);
						$('#colorpickerSwatch').val(edata.color).css('background-color','rgb(' + edata.color + ')');
						console.log('Update current users stored name: ' + edata.username);
						username = edata.username;
						break;
				}
				
			}
			
			ws.onclose = function(event){
				$('#nodeChat_messages').append($('<li class="btn btn-danger btn-lg btn-block" style="margin:5px 0;">').text('Websocket Closed...'));
				keepalive = '';
			}	
		}
		//////////////////////////////
		function initColorPicker(){
			$('#textColor').ColorPicker({
				onSubmit: function(hsb, hex, rgb, el) {
					logProperties(rgb);
					rgbVal = rgb.r + ',' + rgb.g + ',' + rgb.b;
					$('#colorpickerSwatch').css('background-color','rgb('+ rgbVal + ')');
					$(el).ColorPickerHide();
					if(loggedIn){
						var obj = {
							'type': 'UPDATE_USER_TEXTCOLOR',
							'username': username,
							'value': rgbVal
						};	
						ws.send(JSON.stringify(obj));
					}
				},
				onBeforeShow: function () {
					color = $('#colorpickerSwatch').css('background-color');
					color = color.replace(/(rgb\(|\)| )/g,'').split(',');
					rgb = {
						r: color[0],
						g: color[1],
						b: color[2]
					};
					$(this).ColorPickerSetColor(rgb);
				}
			});
		}